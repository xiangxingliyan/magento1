Event.simulateMouse=function(t,s){var e=Object.extend({pointerX:0,pointerY:0,buttons:0,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1},arguments[2]||{}),i=document.createEvent("MouseEvents");i.initMouseEvent(s,!0,!0,document.defaultView,e.buttons,e.pointerX,e.pointerY,e.pointerX,e.pointerY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,0,$(t)),this.mark&&Element.remove(this.mark),this.mark=document.createElement("div"),this.mark.appendChild(document.createTextNode(" ")),document.body.appendChild(this.mark),this.mark.style.position="absolute",this.mark.style.top=e.pointerY+"px",this.mark.style.left=e.pointerX+"px",this.mark.style.width="5px",this.mark.style.height="5px;",this.mark.style.borderTop="1px solid red;",this.mark.style.borderLeft="1px solid red;",this.step&&alert("["+(new Date).getTime().toString()+"] "+s+"/"+Test.Unit.inspect(e)),$(t).dispatchEvent(i)},Event.simulateKey=function(t,s){var e=Object.extend({ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,keyCode:0,charCode:0},arguments[2]||{}),i=document.createEvent("KeyEvents");i.initKeyEvent(s,!0,!0,window,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.keyCode,e.charCode),$(t).dispatchEvent(i)},Event.simulateKeys=function(t,s){for(var e=0;e<s.length;e++)Event.simulateKey(t,"keypress",{charCode:s.charCodeAt(e)})};var Test={};Test.Unit={},Test.Unit.inspect=Object.inspect,Test.Unit.Logger=Class.create(),Test.Unit.Logger.prototype={initialize:function(t){this.log=$(t),this.log&&this._createLogTable()},start:function(t){this.log&&(this.testName=t,this.lastLogLine=document.createElement("tr"),this.statusCell=document.createElement("td"),this.nameCell=document.createElement("td"),this.nameCell.className="nameCell",this.nameCell.appendChild(document.createTextNode(t)),this.messageCell=document.createElement("td"),this.lastLogLine.appendChild(this.statusCell),this.lastLogLine.appendChild(this.nameCell),this.lastLogLine.appendChild(this.messageCell),this.loglines.appendChild(this.lastLogLine))},finish:function(t,s){this.log&&(this.lastLogLine.className=t,this.statusCell.innerHTML=t,this.messageCell.innerHTML=this._toHTML(s),this.addLinksToResults())},message:function(t){this.log&&(this.messageCell.innerHTML=this._toHTML(t))},summary:function(t){this.log&&(this.logsummary.innerHTML=this._toHTML(t))},_createLogTable:function(){this.log.innerHTML='<div id="logsummary"></div><table id="logtable"><thead><tr><th>Status</th><th>Test</th><th>Message</th></tr></thead><tbody id="loglines"></tbody></table>',this.logsummary=$("logsummary"),this.loglines=$("loglines")},_toHTML:function(t){return t.escapeHTML().replace(/\n/g,"<br/>")},addLinksToResults:function(){$$("tr.failed .nameCell").each(function(t){t.title="Run only this test",Event.observe(t,"click",function(){window.location.search="?tests="+t.innerHTML})}),$$("tr.passed .nameCell").each(function(t){t.title="Run all tests",Event.observe(t,"click",function(){window.location.search=""})})}},Test.Unit.Runner=Class.create(),Test.Unit.Runner.prototype={initialize:function(t){if(this.options=Object.extend({testLog:"testlog"},arguments[1]||{}),this.options.resultsURL=this.parseResultsURLQueryParameter(),this.options.tests=this.parseTestsQueryParameter(),this.options.testLog&&(this.options.testLog=$(this.options.testLog)||null),this.options.tests){this.tests=[];for(var s=0;s<this.options.tests.length;s++)/^test/.test(this.options.tests[s])&&this.tests.push(new Test.Unit.Testcase(this.options.tests[s],t[this.options.tests[s]],t.setup,t.teardown))}else if(this.options.test)this.tests=[new Test.Unit.Testcase(this.options.test,t[this.options.test],t.setup,t.teardown)];else{this.tests=[];for(var e in t)/^test/.test(e)&&this.tests.push(new Test.Unit.Testcase(this.options.context?" -> "+this.options.titles[e]:e,t[e],t.setup,t.teardown))}this.currentTest=0,this.logger=new Test.Unit.Logger(this.options.testLog),setTimeout(this.runTests.bind(this),1e3)},parseResultsURLQueryParameter:function(){return window.location.search.parseQuery().resultsURL},parseTestsQueryParameter:function(){if(window.location.search.parseQuery().tests)return window.location.search.parseQuery().tests.split(",")},getResult:function(){for(var t=!1,s=0;s<this.tests.length;s++){if(this.tests[s].errors>0)return"ERROR";this.tests[s].failures>0&&(t=!0)}return t?"FAILURE":"SUCCESS"},postResults:function(){this.options.resultsURL&&new Ajax.Request(this.options.resultsURL,{method:"get",parameters:"result="+this.getResult(),asynchronous:!1})},runTests:function(){var t=this.tests[this.currentTest];if(!t)return this.postResults(),void this.logger.summary(this.summary());t.isWaiting||this.logger.start(t.name),t.run(),t.isWaiting?(this.logger.message("Waiting for "+t.timeToWait+"ms"),setTimeout(this.runTests.bind(this),t.timeToWait||1e3)):(this.logger.finish(t.status(),t.summary()),this.currentTest++,this.runTests())},summary:function(){for(var t=0,s=0,e=0,i=0;i<this.tests.length;i++)t+=this.tests[i].assertions,s+=this.tests[i].failures,e+=this.tests[i].errors;return(this.options.context?this.options.context+": ":"")+this.tests.length+" tests, "+t+" assertions, "+s+" failures, "+e+" errors"}},Test.Unit.Assertions=Class.create(),Test.Unit.Assertions.prototype={initialize:function(){this.assertions=0,this.failures=0,this.errors=0,this.messages=[]},summary:function(){return this.assertions+" assertions, "+this.failures+" failures, "+this.errors+" errors\n"+this.messages.join("\n")},pass:function(){this.assertions++},fail:function(t){this.failures++,this.messages.push("Failure: "+t)},info:function(t){this.messages.push("Info: "+t)},error:function(t){this.errors++,this.messages.push(t.name+": "+t.message+"("+Test.Unit.inspect(t)+")")},status:function(){return this.failures>0?"failed":this.errors>0?"error":"passed"},assert:function(t){var s=arguments[1]||'assert: got "'+Test.Unit.inspect(t)+'"';try{t?this.pass():this.fail(s)}catch(t){this.error(t)}},assertEqual:function(t,s){var e=arguments[2]||"assertEqual";try{t==s?this.pass():this.fail(e+': expected "'+Test.Unit.inspect(t)+'", actual "'+Test.Unit.inspect(s)+'"')}catch(t){this.error(t)}},assertInspect:function(t,s){var e=arguments[2]||"assertInspect";try{t==s.inspect()?this.pass():this.fail(e+': expected "'+Test.Unit.inspect(t)+'", actual "'+Test.Unit.inspect(s)+'"')}catch(t){this.error(t)}},assertEnumEqual:function(t,s){var e=arguments[2]||"assertEnumEqual";try{$A(t).length==$A(s).length&&t.zip(s).all(function(t){return t[0]==t[1]})?this.pass():this.fail(e+": expected "+Test.Unit.inspect(t)+", actual "+Test.Unit.inspect(s))}catch(t){this.error(t)}},assertNotEqual:function(t,s){var e=arguments[2]||"assertNotEqual";try{t!=s?this.pass():this.fail(e+': got "'+Test.Unit.inspect(s)+'"')}catch(t){this.error(t)}},assertIdentical:function(t,s){var e=arguments[2]||"assertIdentical";try{t===s?this.pass():this.fail(e+': expected "'+Test.Unit.inspect(t)+'", actual "'+Test.Unit.inspect(s)+'"')}catch(t){this.error(t)}},assertNotIdentical:function(t,s){var e=arguments[2]||"assertNotIdentical";try{t!==s?this.pass():this.fail(e+': expected "'+Test.Unit.inspect(t)+'", actual "'+Test.Unit.inspect(s)+'"')}catch(t){this.error(t)}},assertNull:function(t){var s=arguments[1]||"assertNull";try{null==t?this.pass():this.fail(s+': got "'+Test.Unit.inspect(t)+'"')}catch(t){this.error(t)}},assertMatch:function(t,s){var e=arguments[2]||"assertMatch",i=new RegExp(t);try{i.exec(s)?this.pass():this.fail(e+' : regex: "'+Test.Unit.inspect(t)+" did not match: "+Test.Unit.inspect(s)+'"')}catch(t){this.error(t)}},assertHidden:function(t){var s=arguments[1]||"assertHidden";this.assertEqual("none",t.style.display,s)},assertNotNull:function(t){var s=arguments[1]||"assertNotNull";this.assert(null!=t,s)},assertType:function(t,s){var e=arguments[2]||"assertType";try{s.constructor==t?this.pass():this.fail(e+': expected "'+Test.Unit.inspect(t)+'", actual "'+s.constructor+'"')}catch(t){this.error(t)}},assertNotOfType:function(t,s){var e=arguments[2]||"assertNotOfType";try{s.constructor!=t?this.pass():this.fail(e+': expected "'+Test.Unit.inspect(t)+'", actual "'+s.constructor+'"')}catch(t){this.error(t)}},assertInstanceOf:function(t,s){var e=arguments[2]||"assertInstanceOf";try{s instanceof t?this.pass():this.fail(e+": object was not an instance of the expected type")}catch(t){this.error(t)}},assertNotInstanceOf:function(t,s){var e=arguments[2]||"assertNotInstanceOf";try{s instanceof t?this.fail(e+": object was an instance of the not expected type"):this.pass()}catch(t){this.error(t)}},assertRespondsTo:function(t,s){var e=arguments[2]||"assertRespondsTo";try{s[t]&&"function"==typeof s[t]?this.pass():this.fail(e+": object doesn't respond to ["+t+"]")}catch(t){this.error(t)}},assertReturnsTrue:function(t,s){var e=arguments[2]||"assertReturnsTrue";try{var i=s[t];i||(i=s["is"+t.charAt(0).toUpperCase()+t.slice(1)]),i()?this.pass():this.fail(e+": method returned false")}catch(t){this.error(t)}},assertReturnsFalse:function(t,s){var e=arguments[2]||"assertReturnsFalse";try{var i=s[t];i||(i=s["is"+t.charAt(0).toUpperCase()+t.slice(1)]),i()?this.fail(e+": method returned true"):this.pass()}catch(t){this.error(t)}},assertRaise:function(t,s){var e=arguments[2]||"assertRaise";try{s(),this.fail(e+": exception expected but none was raised")}catch(s){null==t||s.name==t?this.pass():this.error(s)}},assertElementsMatch:function(){var t=$A(arguments),s=$A(t.shift());if(s.length!=t.length)return this.fail("assertElementsMatch: size mismatch: "+s.length+" elements, "+t.length+" expressions"),!1;s.zip(t).all(function(t,s){var e=$(t.first()),i=t.last();if(e.match(i))return!0;this.fail("assertElementsMatch: (in index "+s+") expected "+i.inspect()+" but got "+e.inspect())}.bind(this))&&this.pass()},assertElementMatches:function(t,s){this.assertElementsMatch([t],s)},benchmark:function(t,s){var e=new Date;(s||1).times(t);var i=new Date-e;return this.info((arguments[2]||"Operation")+" finished "+s+" iterations in "+i/1e3+"s"),i},_isVisible:function(t){return t=$(t),!t.parentNode||(this.assertNotNull(t),(!t.style||"none"!=Element.getStyle(t,"display"))&&this._isVisible(t.parentNode))},assertNotVisible:function(t){this.assert(!this._isVisible(t),Test.Unit.inspect(t)+" was not hidden and didn't have a hidden parent either. "+arguments[1])},assertVisible:function(t){this.assert(this._isVisible(t),Test.Unit.inspect(t)+" was not visible. "+arguments[1])},benchmark:function(t,s){var e=new Date;(s||1).times(t);var i=new Date-e;return this.info((arguments[2]||"Operation")+" finished "+s+" iterations in "+i/1e3+"s"),i}},Test.Unit.Testcase=Class.create(),Object.extend(Object.extend(Test.Unit.Testcase.prototype,Test.Unit.Assertions.prototype),{initialize:function(name,test,setup,teardown){Test.Unit.Assertions.prototype.initialize.bind(this)(),this.name=name,"string"==typeof test?(test=test.gsub(/(\.should[^\(]+\()/,"#{0}this,"),test=test.gsub(/(\.should[^\(]+)\(this,\)/,"#{1}(this)"),this.test=function(){eval("with(this){"+test+"}")}):this.test=test||function(){},this.setup=setup||function(){},this.teardown=teardown||function(){},this.isWaiting=!1,this.timeToWait=1e3},wait:function(t,s){this.isWaiting=!0,this.test=s,this.timeToWait=t},run:function(){try{try{this.isWaiting||this.setup.bind(this)(),this.isWaiting=!1,this.test.bind(this)()}finally{this.isWaiting||this.teardown.bind(this)()}}catch(t){this.error(t)}}}),Test.setupBDDExtensionMethods=function(){var t={shouldEqual:"assertEqual",shouldNotEqual:"assertNotEqual",shouldEqualEnum:"assertEnumEqual",shouldBeA:"assertType",shouldNotBeA:"assertNotOfType",shouldBeAn:"assertType",shouldNotBeAn:"assertNotOfType",shouldBeNull:"assertNull",shouldNotBeNull:"assertNotNull",shouldBe:"assertReturnsTrue",shouldNotBe:"assertReturnsFalse",shouldRespondTo:"assertRespondsTo"},s=function(t,s,e){this[t].apply(this,(s||[]).concat([e]))};Test.BDDMethods={},$H(t).each(function(t){Test.BDDMethods[t.key]=function(){var e=$A(arguments),i=e.shift();s.apply(i,[t.value,e,this])}}),[Array.prototype,String.prototype,Number.prototype,Boolean.prototype].each(function(t){Object.extend(t,Test.BDDMethods)})},Test.context=function(t,s,e){Test.setupBDDExtensionMethods();var i={},n={};for(specName in s)switch(specName){case"setup":case"teardown":i[specName]=s[specName];break;default:var a="test"+specName.gsub(/\s+/,"-").camelize(),r=s[specName].toString().split("\n").slice(1);/^\{/.test(r[0])&&(r=r.slice(1)),r.pop(),r=r.map(function(t){return t.strip()}),i[a]=r.join("\n"),n[a]=specName}new Test.Unit.Runner(i,{titles:n,testLog:e||"testlog",context:t})};